library(sfpca)
setwd("~/Desktop/sfpca/src")
setwd("~/Desktop/MoMA-prototype/Source code/sfpca")
cnt = 1
for(l in seq(1,10,0.5)){
l1 <- sfpca("PCA",
X=X,
Y=matrix(runif(p*n),n,p),
Omega_u=O_u,Omega_v=O_v,
alpha_u=1,alpha_v=1,
lambda_u=l,lambda_v=l,
P_u="l1",P_v="l1",
non_neg=0,
scad_a=3.7,
EPS=1e-9,
MAX_ITER=1e+5,
solver='ISTA',
SVD = 1)
scad <- sfpca("PCA",
X=X,
Y=matrix(runif(p*n),n,p),
Omega_u=O_u,Omega_v=O_v,
alpha_u=1,alpha_v=1,
lambda_u=l,lambda_v=l,
P_u="scad",P_v="scad",
non_neg=0,
scad_a=3.7,
EPS=1e-9,
MAX_ITER=1e+5,
solver='ISTA',
SVD = 1)
l1nonneg <- sfpca("PCA",
X=X,
Y=matrix(runif(p*n),n,p),
Omega_u=O_u,Omega_v=O_v,
alpha_u=1,alpha_v=1,
lambda_u=l,lambda_v=l,
P_u="L1",P_v="L1",
non_neg=1,
scad_a=3.7,
EPS=1e-9,
MAX_ITER=1e+5,
solver='ISTA',
SVD = 1)
plot(l1$v,type='l',xlab=paste("scad//l1//Non-nega l1","lambda=",l),xlim=c(0,70))
lines(scad$v,col=cnt+2)
lines(l1nonneg$v,col=cnt+1)
save.image()
}
res1 <- sfpca(X,
O_u,O_v,
1,1,
lambda_u=1,lambda_v=3,
"l1","l1",
non_neg=0,
scad_a=3.7,
1e-9,1e+5,
solver='FISTA')
plot(res1$v,type='l')
res3 <- sfpca(X,
O_u,O_v,
1,1,
lambda_u=1,lambda_v=3,
"l1","l1",
non_neg=0,
scad_a=3.7,
1e-9,1e+5,
solver='ISTA')
plot(res3$v,type='l')
res2 <- sfpca(res1$DeflatedX,
O_u,O_v,
1,1,
lambda_u=6.5,lambda_v=6.5,
"l1","l1",
1e-9,1e+5)
plot(res2$v,type='l')
#-------------------
# Demo 2, effects of different penalty levels
#-------------------
sm_set = c(0.1,1,10,100)
sp_set = c(1,10,20,30)
par(mfrow=c(length(smset),length(sp_set)))
for(sm in sm_set){
for(sp in sp_set){
res <- sfpca(X,
O_u,O_v,
sm,sm,
lambda_u=sp,lambda_v=sp,
"l1","l1",
1e-9,1e+5)
plot(res$v,type='l')
}
}
title(main="Effects of penalty parameters",
xlab="Sparsity", ylab="Smoothness")
n <- 199
p <- 200
ind <- as.vector(seq(p))
u_1 <- uni(n)
u_3 <- uni(n)
eps <- eps/20
v_1 <- sin((ind+15)*pi/17);v_1[floor(7/20*p):p]=0;
v_1 <- v_1/norm_vec(v_1);
v_2 <- as.vector(exp(-(ind-100)^2/650)*sin((ind-100)*2*pi/21));
v_2[0:floor(7/20*p)]=0;v_2[floor(130/200*p):p] = 0;
v_2 <- v_2/norm_vec(v_2);
v_3 <- sin((ind-40)*pi/30);v_3[0:floor(130/200*p)]=0;
v_3 <- v_3/norm_vec(v_3);
plot(v_1,type = 'l',ylim=c(-0.3,0.3));
lines(v_2,col='blue');
lines(v_3,col='red')
X <-  n/4*u_1 %*% t(v_1) +eps + n/5*u_2 %*% t(v_2) #+ n/6 * u_3 %*% t(u_3)
O_v <- SSD(p)
ss =svd(X)
u_2 <- uni(n)
eps <- matrix(rnorm(n*p),n,p)
O_u <- SSD(n)
plot(ss$v[,1],type='l')
print(norm(X) /norm(eps))
norm_vec <- function(x) sqrt(sum(x^2))
SSD <- function(n){
a <- 6*diag(n)
for(i in 1:n){
for(j in 1:n){
if(abs(i-j) == 1) a[i,j] = -3;
if(abs(i-j) == 2) a[i,j] = 1;
}
}
return(a);
}
uni <- function(n){
u_1 <- as.vector(rnorm(n))
return(u_1/norm_vec(u_1))
}
n <- 199
p <- 200
ind <- as.vector(seq(p))
u_1 <- uni(n)
u_2 <- uni(n)
u_3 <- uni(n)
eps <- matrix(rnorm(n*p),n,p)
eps <- eps/20
v_1 <- sin((ind+15)*pi/17);v_1[floor(7/20*p):p]=0;
v_1 <- v_1/norm_vec(v_1);
v_2 <- as.vector(exp(-(ind-100)^2/650)*sin((ind-100)*2*pi/21));
v_2[0:floor(7/20*p)]=0;v_2[floor(130/200*p):p] = 0;
v_2 <- v_2/norm_vec(v_2);
v_3 <- sin((ind-40)*pi/30);v_3[0:floor(130/200*p)]=0;
v_3 <- v_3/norm_vec(v_3);
plot(v_1,type = 'l',ylim=c(-0.3,0.3));
lines(v_2,col='blue');
lines(v_3,col='red')
X <-  n/4*u_1 %*% t(v_1) +eps + n/5*u_2 %*% t(v_2) #+ n/6 * u_3 %*% t(u_3)
print(norm(X) /norm(eps))
O_u <- SSD(n)
O_v <- SSD(p)
ss =svd(X)
plot(ss$v[,1],type='l')
library('Rcpp')
library('RcppArmadillo')
cnt = 1
for(l in seq(1,10,0.5)){
l1 <- sfpca("PCA",
X=X,
Y=matrix(runif(p*n),n,p),
Omega_u=O_u,Omega_v=O_v,
alpha_u=1,alpha_v=1,
lambda_u=l,lambda_v=l,
P_u="l1",P_v="l1",
non_neg=0,
scad_a=3.7,
EPS=1e-9,
MAX_ITER=1e+5,
solver='ISTA',
SVD = 1)
scad <- sfpca("PCA",
X=X,
Y=matrix(runif(p*n),n,p),
Omega_u=O_u,Omega_v=O_v,
alpha_u=1,alpha_v=1,
lambda_u=l,lambda_v=l,
P_u="scad",P_v="scad",
non_neg=0,
scad_a=3.7,
EPS=1e-9,
MAX_ITER=1e+5,
solver='ISTA',
SVD = 1)
l1nonneg <- sfpca("PCA",
X=X,
Y=matrix(runif(p*n),n,p),
Omega_u=O_u,Omega_v=O_v,
alpha_u=1,alpha_v=1,
lambda_u=l,lambda_v=l,
P_u="L1",P_v="L1",
non_neg=1,
scad_a=3.7,
EPS=1e-9,
MAX_ITER=1e+5,
solver='ISTA',
SVD = 1)
plot(l1$v,type='l',xlab=paste("scad//l1//Non-nega l1","lambda=",l),xlim=c(0,70))
lines(scad$v,col=cnt+2)
lines(l1nonneg$v,col=cnt+1)
save.image()
}
library(sfpca)
cnt = 1
for(l in seq(1,10,0.5)){
l1 <- sfpca("PCA",
X=X,
Y=matrix(runif(p*n),n,p),
Omega_u=O_u,Omega_v=O_v,
alpha_u=1,alpha_v=1,
lambda_u=l,lambda_v=l,
P_u="l1",P_v="l1",
non_neg=0,
scad_a=3.7,
EPS=1e-9,
MAX_ITER=1e+5,
solver='ISTA',
SVD = 1)
scad <- sfpca("PCA",
X=X,
Y=matrix(runif(p*n),n,p),
Omega_u=O_u,Omega_v=O_v,
alpha_u=1,alpha_v=1,
lambda_u=l,lambda_v=l,
P_u="scad",P_v="scad",
non_neg=0,
scad_a=3.7,
EPS=1e-9,
MAX_ITER=1e+5,
solver='ISTA',
SVD = 1)
l1nonneg <- sfpca("PCA",
X=X,
Y=matrix(runif(p*n),n,p),
Omega_u=O_u,Omega_v=O_v,
alpha_u=1,alpha_v=1,
lambda_u=l,lambda_v=l,
P_u="L1",P_v="L1",
non_neg=1,
scad_a=3.7,
EPS=1e-9,
MAX_ITER=1e+5,
solver='ISTA',
SVD = 1)
plot(l1$v,type='l',xlab=paste("scad//l1//Non-nega l1","lambda=",l),xlim=c(0,70))
lines(scad$v,col=cnt+2)
lines(l1nonneg$v,col=cnt+1)
save.image()
}
library(sfpca)
l1 <- sfpca("PCA",
X=X,
Y=matrix(runif(p*n),n,p),
Omega_u=O_u,Omega_v=O_v,
alpha_u=1,alpha_v=1,
lambda_u=l,lambda_v=l,
P_u="l1",P_v="l1",
non_neg=0,
scad_a=3.7,
EPS=1e-9,
MAX_ITER=1e+5,
solver='ISTA',
SVD = 1)
scad <- sfpca("PCA",
X=X,
Y=matrix(runif(p*n),n,p),
Omega_u=O_u,Omega_v=O_v,
alpha_u=1,alpha_v=1,
lambda_u=l,lambda_v=l,
P_u="scad",P_v="scad",
non_neg=0,
scad_a=3.7,
EPS=1e-9,
MAX_ITER=1e+5,
solver='ISTA',
SVD = 1)
l1nonneg <- sfpca("PCA",
X=X,
Y=matrix(runif(p*n),n,p),
Omega_u=O_u,Omega_v=O_v,
alpha_u=1,alpha_v=1,
lambda_u=l,lambda_v=l,
P_u="L1",P_v="L1",
non_neg=1,
scad_a=3.7,
EPS=1e-9,
MAX_ITER=1e+5,
solver='ISTA',
SVD = 1)
plot(l1$v,type='l',xlab=paste("scad//l1//Non-nega l1","lambda=",l),xlim=c(0,70))
lines(scad$v,col=cnt+2)
lines(l1nonneg$v,col=cnt+1)
save.image()
l1 <- sfpca("PCA",
X=X,
Y=matrix(runif(p*n),n,p),
Omega_u=O_u,Omega_v=O_v,
alpha_u=1,alpha_v=1,
lambda_u=l,lambda_v=l,
P_u="l1",P_v="l1",
non_neg=0,
scad_a=3.7,
EPS=1e-9,
MAX_ITER=1e+5,
solver='ISTA',
SVD = 1)
l1
plot(l1$v,type='l',xlab=paste("scad//l1//Non-nega l1","lambda=",l),xlim=c(0,70))
lines(scad$v,col=cnt+2)
lines(l1nonneg$v,col=cnt+1)
norm_vec <- function(x) sqrt(sum(x^2))
SSD <- function(n){
a <- 6*diag(n)
for(i in 1:n){
for(j in 1:n){
if(abs(i-j) == 1) a[i,j] = -3;
if(abs(i-j) == 2) a[i,j] = 1;
}
}
return(a);
}
uni <- function(n){
u_1 <- as.vector(rnorm(n))
return(u_1/norm_vec(u_1))
}
n <- 199
p <- 200
ind <- as.vector(seq(p))
u_1 <- uni(n)
u_2 <- uni(n)
u_3 <- uni(n)
eps <- matrix(rnorm(n*p),n,p)
eps <- eps/20
v_1 <- sin((ind+15)*pi/17);v_1[floor(7/20*p):p]=0;
v_1 <- v_1/norm_vec(v_1);
v_2 <- as.vector(exp(-(ind-100)^2/650)*sin((ind-100)*2*pi/21));
v_2[0:floor(7/20*p)]=0;v_2[floor(130/200*p):p] = 0;
v_2 <- v_2/norm_vec(v_2);
v_3 <- sin((ind-40)*pi/30);v_3[0:floor(130/200*p)]=0;
v_3 <- v_3/norm_vec(v_3);
plot(v_1,type = 'l',ylim=c(-0.3,0.3));
lines(v_2,col='blue');
lines(v_3,col='red')
X <-  n/4*u_1 %*% t(v_1) +eps + n/5*u_2 %*% t(v_2) #+ n/6 * u_3 %*% t(u_3)
print(norm(X) /norm(eps))
O_u <- SSD(n)
O_v <- SSD(p)
ss =svd(X)
plot(ss$v[,1],type='l')
res1 <- sfpca(X,
O_u,O_v,
1,1,
lambda_u=1,lambda_v=3,
"l1","l1",
non_neg=0,
scad_a=3.7,
1e-9,1e+5,
solver='FISTA')
cnt = 1
for(l in seq(1,10,0.5)){
l1 <- sfpca("PCA",
X=X,
Y=matrix(runif(p*n),n,p),
Omega_u=O_u,Omega_v=O_v,
alpha_u=1,alpha_v=1,
lambda_u=l,lambda_v=l,
P_u="l1",P_v="l1",
non_neg=0,
scad_a=3.7,
EPS=1e-9,
MAX_ITER=1e+5,
solver='ISTA',
SVD = 1)
scad <- sfpca("PCA",
X=X,
Y=matrix(runif(p*n),n,p),
Omega_u=O_u,Omega_v=O_v,
alpha_u=1,alpha_v=1,
lambda_u=l,lambda_v=l,
P_u="scad",P_v="scad",
non_neg=0,
scad_a=3.7,
EPS=1e-9,
MAX_ITER=1e+5,
solver='ISTA',
SVD = 1)
l1nonneg <- sfpca("PCA",
X=X,
Y=matrix(runif(p*n),n,p),
Omega_u=O_u,Omega_v=O_v,
alpha_u=1,alpha_v=1,
lambda_u=l,lambda_v=l,
P_u="L1",P_v="L1",
non_neg=1,
scad_a=3.7,
EPS=1e-9,
MAX_ITER=1e+5,
solver='ISTA',
SVD = 1)
plot(l1$v,type='l',xlab=paste("scad//l1//Non-nega l1","lambda=",l),xlim=c(0,70))
lines(scad$v,col=cnt+2)
lines(l1nonneg$v,col=cnt+1)
save.image()
}
library(sfpca)
